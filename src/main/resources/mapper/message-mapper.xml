<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="pub.zgq.community.dao.MessageMapper">
    <sql id="selectField">
        id, from_id, to_id, conversation_id, content, status, create_time
    </sql>
    <sql id="insertField">
        from_id, to_id, conversation_id, content, status, create_time
    </sql>

    <select id="selectConversations" resultType="Message">
        select <include refid="selectField"></include>
        from message
        where id in (
            SELECT MAX(id)
            FROM message
            WHERE STATUS != 2
            AND from_id !=1
            AND (from_id = #{userId} OR to_id = #{userId})
            GROUP BY conversation_id
        )
        order by id desc
        limit #{offset}, #{limit}
    </select>
    <select id="selectConversationCount" resultType="java.lang.Integer">
        select count(m.maxid) from (
            SELECT MAX(id) as maxid
            FROM message
            WHERE STATUS != 2
            AND from_id !=1
            AND (from_id = #{userId} OR to_id = #{userId})
            GROUP BY conversation_id
            ) as m
    </select>
    <select id="selectLetters" resultType="pub.zgq.community.entity.Message">
        select <include refid="selectField"></include>
        from message
        where status != 2
        and from_id != 1
        and conversation_id = #{conversationId}
        order by id desc
        limit #{offset}, #{limit}
    </select>
    <select id="selectLettersCount" resultType="java.lang.Integer">
        select count(id)
        from message
        where status != 2
        and from_id != 1
        and conversation_id = #{conversationId}
    </select>
    <select id="selectLetterUnreadCount" resultType="java.lang.Integer">
        select count(id)
        from message
        where status = 0
        and from_id != 1
        and to_id = #{userId}
        <if test="conversationId!=null">
            and conversation_id = #{conversationId}
        </if>
    </select>
    <insert id="insertMessage" parameterType="message" keyProperty="id">
        insert into message (<include refid="insertField"></include>)
        values (#{fromId}, #{toId}, #{conversationId}, #{content}, #{status}, #{createTime})
    </insert>
    <update id="updateStatus">
        update message set status = #{status}
        where id in
        <foreach collection="ids" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>


    </update>

</mapper>